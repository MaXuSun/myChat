<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maxu.mychat.dao.UserMapper">
	<resultMap id="BaseResultMap"
		type="com.maxu.mychat.model.User">
		<result column="userId" jdbcType="INTEGER" property="userid" />
		<result column="userPassword" jdbcType="VARCHAR"
			property="userpassword" />
		<result column="userNickname" jdbcType="VARCHAR"
			property="usernickname" />
		<result column="userGender" jdbcType="INTEGER"
			property="usergender" />
		<result column="userAge" jdbcType="INTEGER" property="userage" />
		<result column="userProfiledhead" jdbcType="VARCHAR"
			property="userprofiledhead" />
		<result column="userProfile" jdbcType="VARCHAR"
			property="userprofile" />
		<result column="userBirthday" jdbcType="VARCHAR"
			property="userbirthday" />
		<result column="userEmail" jdbcType="VARCHAR"
			property="useremail" />
		<result column="userIp" jdbcType="VARCHAR" property="userip" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		userId, userPassword, userNickname, userGender, userAge, userProfiledhead,
		userProfile,
		userBirthday, userEmail, userIp
	</sql>
	<select id="selectByExample"
		parameterType="com.maxu.mychat.model.UserExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<delete id="deleteByExample"
		parameterType="com.maxu.mychat.model.UserExample">
		delete from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.maxu.mychat.model.User">
		insert into user (userId, userPassword, userNickname,
		userGender, userAge, userProfiledhead,
		userProfile, userBirthday, userEmail,
		userIp)
		values (#{userid,jdbcType=INTEGER}, #{userpassword,jdbcType=VARCHAR},
		#{usernickname,jdbcType=VARCHAR},
		#{usergender,jdbcType=INTEGER}, #{userage,jdbcType=INTEGER}, #{userprofiledhead,jdbcType=VARCHAR},
		#{userprofile,jdbcType=VARCHAR}, #{userbirthday,jdbcType=VARCHAR},
		#{useremail,jdbcType=VARCHAR},
		#{userip,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.maxu.mychat.model.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				userId,
			</if>
			<if test="userpassword != null">
				userPassword,
			</if>
			<if test="usernickname != null">
				userNickname,
			</if>
			<if test="usergender != null">
				userGender,
			</if>
			<if test="userage != null">
				userAge,
			</if>
			<if test="userprofiledhead != null">
				userProfiledhead,
			</if>
			<if test="userprofile != null">
				userProfile,
			</if>
			<if test="userbirthday != null">
				userBirthday,
			</if>
			<if test="useremail != null">
				userEmail,
			</if>
			<if test="userip != null">
				userIp,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				#{userid,jdbcType=INTEGER},
			</if>
			<if test="userpassword != null">
				#{userpassword,jdbcType=VARCHAR},
			</if>
			<if test="usernickname != null">
				#{usernickname,jdbcType=VARCHAR},
			</if>
			<if test="usergender != null">
				#{usergender,jdbcType=INTEGER},
			</if>
			<if test="userage != null">
				#{userage,jdbcType=INTEGER},
			</if>
			<if test="userprofiledhead != null">
				#{userprofiledhead,jdbcType=VARCHAR},
			</if>
			<if test="userprofile != null">
				#{userprofile,jdbcType=VARCHAR},
			</if>
			<if test="userbirthday != null">
				#{userbirthday,jdbcType=VARCHAR},
			</if>
			<if test="useremail != null">
				#{useremail,jdbcType=VARCHAR},
			</if>
			<if test="userip != null">
				#{userip,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.maxu.mychat.model.UserExample"
		resultType="java.lang.Integer">
		select count(*) from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user
		<set>
			<if test="record.userid != null">
				userId = #{record.userid,jdbcType=INTEGER},
			</if>
			<if test="record.userpassword != null">
				userPassword = #{record.userpassword,jdbcType=VARCHAR},
			</if>
			<if test="record.usernickname != null">
				userNickname = #{record.usernickname,jdbcType=VARCHAR},
			</if>
			<if test="record.usergender != null">
				userGender = #{record.usergender,jdbcType=INTEGER},
			</if>
			<if test="record.userage != null">
				userAge = #{record.userage,jdbcType=INTEGER},
			</if>
			<if test="record.userprofiledhead != null">
				userProfiledhead = #{record.userprofiledhead,jdbcType=VARCHAR},
			</if>
			<if test="record.userprofile != null">
				userProfile = #{record.userprofile,jdbcType=VARCHAR},
			</if>
			<if test="record.userbirthday != null">
				userBirthday = #{record.userbirthday,jdbcType=VARCHAR},
			</if>
			<if test="record.useremail != null">
				userEmail = #{record.useremail,jdbcType=VARCHAR},
			</if>
			<if test="record.userip != null">
				userIp = #{record.userip,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user
		set userId = #{record.userid,jdbcType=INTEGER},
		userPassword = #{record.userpassword,jdbcType=VARCHAR},
		userNickname = #{record.usernickname,jdbcType=VARCHAR},
		userGender = #{record.usergender,jdbcType=INTEGER},
		userAge = #{record.userage,jdbcType=INTEGER},
		userProfiledhead = #{record.userprofiledhead,jdbcType=VARCHAR},
		userProfile = #{record.userprofile,jdbcType=VARCHAR},
		userBirthday = #{record.userbirthday,jdbcType=VARCHAR},
		userEmail = #{record.useremail,jdbcType=VARCHAR},
		userIp = #{record.userip,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
</mapper>